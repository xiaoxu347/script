-- Ensure functions are defined before use
local function stopAction()
    print("stopAction() called")
    if isStoppedValue.Value then return end
    isStoppedValue.Value = true

    if humanoid then
        -- Stop all animations
        for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
            track:Stop()
            table.insert(animations, track)
        end

        -- Stop character movement
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
    else
        warn("Humanoid is not available when stopping action.")
    end

    -- Save and stop character physical state
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            originalStates[part] = part.Anchored
            part.Anchored = true
        end
    end

    -- Disable tools
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            table.insert(tools, tool)
            tool.Enabled = false
        end
    end

    local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChild("ActionControlGui")
    if screenGui then
        local toggleButton = screenGui:FindFirstChildOfClass("TextButton")
        if toggleButton then
            toggleButton.Text = "Resume Action"
        else
            warn("Toggle button not found in ActionControlGui.")
        end
    else
        warn("ActionControlGui not found in PlayerGui.")
    end
end

local function resumeAction()
    print("resumeAction() called")
    if not isStoppedValue.Value then return end
    isStoppedValue.Value = false

    -- Resume all animations
    for _, track in ipairs(animations) do
        track:Play()
    end
    animations = {}

    -- Resume character movement
    if humanoid then
        humanoid.WalkSpeed = 16  -- Default walk speed
        humanoid.JumpPower = 50  -- Default jump power
    else
        warn("Humanoid is not available when resuming action.")
    end

    -- Restore character physical state
    for part, anchored in pairs(originalStates) do
        if part and part:IsA("BasePart") then
            part.Anchored = anchored
        end
    end
    originalStates = {}

    -- Enable tools
    for _, tool in ipairs(tools) do
        if tool and tool:IsA("Tool") then
            tool.Enabled = true
        end
    end
    tools = {}

    local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChild("ActionControlGui")
    if screenGui then
        local toggleButton = screenGui:FindFirstChildOfClass("TextButton")
        if toggleButton then
            toggleButton.Text = "Stop Action"
        else
            warn("Toggle button not found in ActionControlGui.")
        end
    else
        warn("ActionControlGui not found in PlayerGui.")
    end
end

-- Button click event
toggleButton.MouseButton1Click:Connect(function()
    print("Toggle button clicked. Current state:", isStoppedValue.Value)
    if isStoppedValue.Value then
        print("Calling resumeAction()")
        resumeAction()
    else
        print("Calling stopAction()")
        stopAction()
    end
end)
