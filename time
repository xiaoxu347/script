local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animations = {}
local isStopped = false
local originalStates = {}
local tools = {}

-- 创建 GUI
local function createGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 200, 0, 50)
    toggleButton.Position = UDim2.new(0.5, -100, 0.1, 0)
    toggleButton.Text = "Stop Action"
    toggleButton.Parent = screenGui
    toggleButton.Active = true
    toggleButton.Draggable = true

    toggleButton.MouseButton1Click:Connect(function()
        if isStopped then
            resumeAction()
        else
            stopAction()
        end
    end)
end

-- 停止角色行动
local function stopAction()
    if isStopped then return end
    isStopped = true

    -- 停止所有动画
    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
        table.insert(animations, track)
    end

    -- 停止角色移动
    humanoid.WalkSpeed = 0
    humanoid.JumpPower = 0

    -- 保存并停止角色物理状态
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            originalStates[part] = part.Anchored
            part.Anchored = true
        end
    end

    -- 禁用工具
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            table.insert(tools, tool)
            tool.Enabled = false
        end
    end

    -- 更新按钮文字
    local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChildOfClass("ScreenGui")
    if screenGui then
        local toggleButton = screenGui:FindFirstChildOfClass("TextButton")
        if toggleButton then
            toggleButton.Text = "Resume Action"
        end
    end
end

-- 恢复角色行动
local function resumeAction()
    if not isStopped then return end
    isStopped = false

    -- 恢复所有动画
    for _, track in ipairs(animations) do
        track:Play()
    end
    animations = {}

    -- 恢复角色移动
    humanoid.WalkSpeed = 16  -- 默认行走速度
    humanoid.JumpPower = 50  -- 默认跳跃能力

    -- 恢复角色物理状态
    for part, anchored in pairs(originalStates) do
        if part and part:IsA("BasePart") then
            part.Anchored = anchored
        end
    end
    originalStates = {}

    -- 启用工具
    for _, tool in ipairs(tools) do
        if tool and tool:IsA("Tool") then
            tool.Enabled = true
        end
    end
    tools = {}

    -- 更新按钮文字
    local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChildOfClass("ScreenGui")
    if screenGui then
        local toggleButton = screenGui:FindFirstChildOfClass("TextButton")
        if toggleButton then
            toggleButton.Text = "Stop Action"
        end
    end
end

-- 确保角色加载完毕后能够正确控制行动
local function onCharacterAdded(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")

    if isStopped then
        stopAction()
    else
        resumeAction()
    end

    -- 监听死亡事件
    humanoid.Died:Connect(function()
        -- 在角色死亡时，删除现有的 GUI
        local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChildOfClass("ScreenGui")
        if screenGui then
            screenGui:Destroy()
        end
    end)
end

-- 初始设置
createGUI()
onCharacterAdded(character)
player.CharacterAdded:Connect(onCharacterAdded)
