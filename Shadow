local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- 定义本地玩家和目标玩家
local localPlayer = Players.LocalPlayer
local targetPlayer = Players:FindFirstChild("yaoshen21") -- 替换为目标玩家名称

-- 等待角色加载完成
local function waitForCharacter(player)
    while not player.Character do
        player.CharacterAdded:Wait()
    end
    return player.Character
end

-- 等待本地玩家和目标玩家角色加载
local localCharacter = waitForCharacter(localPlayer)
local targetCharacter = waitForCharacter(targetPlayer)

-- 获取人形根部件
local localHumanoidRootPart = localCharacter:WaitForChild("HumanoidRootPart")
local targetHumanoidRootPart = targetCharacter:WaitForChild("HumanoidRootPart")

-- 创建 BodyPosition 和 BodyGyro 控制位置和方向
local bodyPosition = Instance.new("BodyPosition")
bodyPosition.MaxForce = Vector3.new(4000, 4000, 4000) -- 设置最大施力
bodyPosition.P = 3000 -- 控制力度
bodyPosition.D = 100 -- 控制阻尼

local bodyGyro = Instance.new("BodyGyro")
bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000) -- 设置最大旋转力
bodyGyro.P = 3000 -- 控制旋转力度

-- 自定义漂浮位置和角度
local positionOffset = Vector3.new(0, 5, 10) -- 初始偏移位置，可调整
local angleOffset = CFrame.Angles(0, 5, 0) -- 初始角度偏移，可调整

-- 将 BodyPosition 和 BodyGyro 绑定到本地玩家的 HumanoidRootPart
bodyPosition.Parent = localHumanoidRootPart
bodyGyro.Parent = localHumanoidRootPart

-- 更新位置和方向的函数
local function updatePositionAndRotation()
    if targetHumanoidRootPart and localHumanoidRootPart then
        -- 设置漂浮位置在目标玩家头上，并应用自定义偏移
        bodyPosition.Position = targetHumanoidRootPart.Position + positionOffset
        -- 设置面向目标玩家，并应用自定义角度偏移
        bodyGyro.CFrame = CFrame.new(localHumanoidRootPart.Position, targetHumanoidRootPart.Position) * angleOffset
    end
end

-- 每帧更新玩家位置和方向
RunService.RenderStepped:Connect(updatePositionAndRotation)

-- 示例：用键盘按键调整位置和角度（需将以下内容加入主代码）
local UserInputService = game:GetService("UserInputService")

-- 定义按键事件来调整位置和角度
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    -- 根据按键调整漂浮位置
    if input.KeyCode == Enum.KeyCode.Up then
        positionOffset = positionOffset + Vector3.new(0, 0.5, 0)
    elseif input.KeyCode == Enum.KeyCode.Down then
        positionOffset = positionOffset - Vector3.new(0, 0.5, 0)
    elseif input.KeyCode == Enum.KeyCode.Left then
        positionOffset = positionOffset + Vector3.new(-0.5, 0, 0)
    elseif input.KeyCode == Enum.KeyCode.Right then
        positionOffset = positionOffset + Vector3.new(0.5, 0, 0)
    end

    -- 根据按键调整角度
    if input.KeyCode == Enum.KeyCode.Q then
        angleOffset = angleOffset * CFrame.Angles(0, math.rad(5), 0)
    elseif input.KeyCode == Enum.KeyCode.E then
        angleOffset = angleOffset * CFrame.Angles(0, math.rad(-5), 0)
    end
end)
