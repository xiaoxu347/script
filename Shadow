-- 获取服务
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- 获取当前玩家
local localPlayer = Players.LocalPlayer

-- GUI 可移动功能
local function makeGuiDraggable(frame)
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- 创建 GUI 元素
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

local inputFrame = Instance.new("Frame")
inputFrame.Size = UDim2.new(0, 220, 0, 120)
inputFrame.Position = UDim2.new(0.5, -110, 0.4, 0)
inputFrame.BackgroundTransparency = 0.3
inputFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
inputFrame.Parent = screenGui
makeGuiDraggable(inputFrame) -- 使 GUI 可拖动

-- 创建 TextBox 输入目标玩家名字
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0, 200, 0, 50)
inputBox.Position = UDim2.new(0, 10, 0, 10)
inputBox.PlaceholderText = "输入目标玩家名字"
inputBox.Parent = inputFrame

-- 创建按钮
local Button = Instance.new("TextButton")
Button.Size = UDim2.new(0, 200, 0, 50)
Button.Position = UDim2.new(0, 10, 0, 70)
Button.Text = "传送"
Button.Parent = inputFrame

-- 用户名联想下拉菜单
local suggestionFrame = Instance.new("Frame")
suggestionFrame.Size = UDim2.new(0, 200, 0, 100)
suggestionFrame.Position = UDim2.new(0, 10, 0, 60)
suggestionFrame.Visible = false
suggestionFrame.BackgroundTransparency = 0.2
suggestionFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
suggestionFrame.Parent = inputFrame

-- 创建下拉菜单中的建议按钮
local function createSuggestionButton(playerName)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 200, 0, 30)
    button.Text = playerName
    button.Parent = suggestionFrame

    button.MouseButton1Click:Connect(function()
        inputBox.Text = playerName
        suggestionFrame.Visible = false
    end)
end

-- 自动联想功能
local function updateSuggestions()
    suggestionFrame:ClearAllChildren()  -- 清除旧的建议
    local inputText = inputBox.Text:lower()

    if inputText == "" then
        suggestionFrame.Visible = false
        return
    end

    local matchingPlayers = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():find(inputText) then
            table.insert(matchingPlayers, player.Name)
        end
    end

    if #matchingPlayers > 0 then
        suggestionFrame.Visible = true
        for _, playerName in ipairs(matchingPlayers) do
            createSuggestionButton(playerName)
        end
    else
        suggestionFrame.Visible = false
    end
end

inputBox.Changed:Connect(updateSuggestions)

-- 自动联想并观战目标玩家
local function autoCompleteAndSpectate()
    local inputText = inputBox.Text:lower()
    local matchingPlayers = {}

    -- 从玩家列表中找到匹配的玩家
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():find(inputText) then
            table.insert(matchingPlayers, player)
        end
    end

    -- 如果找到匹配的玩家，自动选择第一个并观战
    if #matchingPlayers > 0 then
        local targetPlayer = matchingPlayers[1]  -- 自动选择第一个匹配的玩家
        print("自动选择并观战玩家: " .. targetPlayer.Name)

        -- 如果目标玩家有角色，转移视角到目标玩家身上
        local character = targetPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = character.HumanoidRootPart
            local camera = game.Workspace.CurrentCamera
            camera.CameraSubject = humanoidRootPart
            camera.CameraType = Enum.CameraType.Custom
        else
            print("目标玩家没有角色或角色不完整")
        end
    else
        print("未找到匹配的玩家")
    end
end

-- 当观战按钮被点击时执行的操作
Button.MouseButton1Click:Connect(function()
    autoCompleteAndSpectate()  -- 自动联想并观战
end)
